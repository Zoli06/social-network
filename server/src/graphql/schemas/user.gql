enum UserUserRelationshipType {
  friend
  incoming_friend_request
  outgoing_friend_request
  incoming_blocking
  outgoing_blocking
  none
}

enum UserUserRelationshipInputType {
  friend
  blocked
  none
}

type UserUserRelationship {
  targetUser: User!
  pointOfViewUser: User!
  type: UserUserRelationshipType!
  createdAt: Date!
  updatedAt: Date!
}

type AuthPayload {
  token: String!
  user: User!
}

type Notification {
  notificationId: ID!
  user: User!
  title: String!
  description: String
  urlPath: String!
  seenAt: Date
  createdAt: Date!
  updatedAt: Date!
}

type User {
  userId: ID!
  firstName: String!
  lastName: String!
  middleName: String
  userName: String!
  mobileNumber: String
  email: String!
  registratedAt: Date!
  lastLoginAt: Date!
  updatedAt: Date!
  intro: String
  friends: [UserUserRelationship!]!
  incomingFriendRequests: [UserUserRelationship!]!
  outgoingFriendRequests: [UserUserRelationship!]!
  blockedUsers: [UserUserRelationship!]!
  userRelationships: [UserUserRelationship!]! # all relationships
  myRelationshipWithUser: UserUserRelationship!
  profileImage: Media
  notifications(showAll: Boolean!): [Notification!]!
  myPrivateMessagesWithUser: [PrivateMessage!]!
}

input UserInput {
  firstName: String!
  lastName: String!
  middleName: String
  userName: String!
  mobileNumber: String
  email: String!
  intro: String
  password: String!
  profileImageMediaId: ID
}

input UserUpdateInput {
  firstName: String
  lastName: String
  middleName: String
  userName: String
  mobileNumber: String
  email: String
  intro: String
  password: String
  profileImageMediaId: ID
}

type Query {
  user(userId: ID!): User!
  me: User!
}

type Mutation {
  register(user: UserInput!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  updateUser(user: UserUpdateInput!): User! # user only can update his/her own profile
  createUserUserRelationship(
    userId: ID!
    type: UserUserRelationshipInputType
  ): UserUserRelationship! # also can be used to delete and update
  checkNotification(notificationId: ID!): Boolean!
}
